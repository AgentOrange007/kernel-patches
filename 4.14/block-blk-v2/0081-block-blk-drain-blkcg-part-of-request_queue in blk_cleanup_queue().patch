<head>
 <meta http-equiv="Content-Type" content="text/html ">
 <title>'[PATCH V2 2/2] block: drain blkcg part of request_queue in blk_cleanup_queue()' - MARC</title>
 <link rel="stylesheet" type="text/css" href="/style.css">
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000C0" vlink="#800080">
<pre><b>[<a href="?l=linux-block&m=151141250907287&w=2">prev in list</a>] [<a href="?l=linux-block&m=151141397707523&w=2">next in list</a>] [<font color="#c0c0c0">prev in thread</font>] [<font color="#c0c0c0">next in thread</font>] </b>
<b><font size=+1>
List:       <a href="?l=linux-block&r=1&w=2">linux-block</a>
Subject:    [PATCH V2 2/2] block: drain blkcg part of request_queue in blk_cleanup_queue()
From:       <a href="?a=149155772200003&r=1&w=2">Ming Lei &lt;ming.lei () redhat ! com&gt;</a>
Date:       <a href="?l=linux-block&r=1&w=2&b=201711">2017-11-23 4:48:00</a>
Message-ID: <a href="?i=20171123044800.25251-3-ming.lei%20()%20redhat%20!%20com">20171123044800.25251-3-ming.lei () redhat ! com</a></font>
[<a href="?l=linux-block&m=151141251807288&q=raw">Download message RAW</a>]</b>

Now once blk_freeze_queue() returns, all requests(in-queue and pending)
can be drained, but we still need to drain blkcg part of request_queue
for both blk-mq and legacy, so this patch calls blkcg_drain_queue()
explicitely in blk_cleanup_queue() to do that.

Then the __blk_drain_queue() in blk_cleanup_queue() can be covered by both
blk_freeze_queue() and blkcg_drain_queue(), and tasks blocked in get_request()
are waken up in blk_set_queue_dying() too, so remove it from blk_cleanup_queue().

Cc: Wen Xiong &lt;wenxiong@us.ibm.com&gt;
Cc: Mauricio Faria de Oliveira &lt;mauricfo@linux.vnet.ibm.com&gt;
Signed-off-by: Ming Lei &lt;ming.lei@redhat.com&gt;
---
 block/blk-core.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/block/blk-core.c b/block/blk-core.c
index 1038706edd87..f3f6f11a5b31 100644
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -689,8 +689,7 @@ void blk_cleanup_queue(struct request_queue *q)
 	 */
 	blk_freeze_queue(q);
 	spin_lock_irq(lock);
-	if (!q-&gt;mq_ops)
-		__blk_drain_queue(q, true);
+	blkcg_drain_queue(q);
 	queue_flag_set(QUEUE_FLAG_DEAD, q);
 	spin_unlock_irq(lock);
 
-- 
2.9.5

<b>[<a href="?l=linux-block&m=151141250907287&w=2">prev in list</a>] [<a href="?l=linux-block&m=151141397707523&w=2">next in list</a>] [<font color="#c0c0c0">prev in thread</font>] [<font color="#c0c0c0">next in thread</font>] </b>
</pre>
  </pre><br><center>
    <a href="?q=configure">Configure</a> | 

    <a href="?q=about">About</a> |
    <a href="?q=news">News</a> |
    <a href="mailto:webguy@marc.info?subject=Add%20a%20list%20to%20MARC">Add&nbsp;a&nbsp;list</a> |
    Sponsored&nbsp;by&nbsp;<a href="http://www.korelogic.com/">KoreLogic</a>
</center>
</body>
</html>
