From 7576c3a83f78b79b238c4d11068a70c3b8c599d3 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Thu, 6 Dec 2018 15:22:20 +0000
Subject: [PATCH 39/42] pds: [Sync] 145d952a2932 sched: Factor out nr_iowait
 and nr_iowait_cpu

---
 kernel/sched/pds.c | 46 +++++++++++++++++++++-------------------------
 1 file changed, 21 insertions(+), 25 deletions(-)

diff --git a/kernel/sched/pds.c b/kernel/sched/pds.c
index 2bfa8ddcc271..6bfde6b54120 100644
--- a/kernel/sched/pds.c
+++ b/kernel/sched/pds.c
@@ -2662,6 +2662,26 @@ unsigned long long nr_context_switches(void)
 	return sum;
 }
 
+/*
+ * Consumers of these two interfaces, like for example the cpuidle menu
+ * governor, are using nonsensical data. Preferring shallow idle state selection
+ * for a CPU that has IO-wait which might not even end up running the task when
+ * it does become runnable.
+ */
+
+unsigned long nr_iowait_cpu(int cpu)
+{
+	return atomic_read(&cpu_rq(cpu)->nr_iowait);
+}
+
+void get_iowait_load(unsigned long *nr_waiters, unsigned long *load)
+{
+	struct rq *rq = this_rq();
+
+	*nr_waiters = atomic_read(&rq->nr_iowait);
+	*load = rq->nr_running;
+}
+
 /*
  * IO-wait accounting, and how its mostly bollocks (on SMP).
  *
@@ -2697,35 +2717,11 @@ unsigned long nr_iowait(void)
 	unsigned long i, sum = 0;
 
 	for_each_possible_cpu(i)
-		sum += atomic_read(&cpu_rq(i)->nr_iowait);
+		sum += nr_iowait_cpu(i);
 
 	return sum;
 }
 
-/*
- * Consumers of these two interfaces, like for example the cpuidle menu
- * governor, are using nonsensical data. Preferring shallow idle state selection
- * for a CPU that has IO-wait which might not even end up running the task when
- * it does become runnable.
- */
-
-unsigned long nr_iowait_cpu(int cpu)
-{
-	struct rq *this = cpu_rq(cpu);
-	return atomic_read(&this->nr_iowait);
-}
-
-/* Beyond a task running on this CPU, load is equal everywhere on PDS, so we
- * base it on the number of running or queued tasks with their ->rq pointer
- * set to this CPU as being the CPU they're more likely to run on. */
-void get_iowait_load(unsigned long *nr_waiters, unsigned long *load)
-{
-	struct rq *rq = this_rq();
-
-	*nr_waiters = atomic_read(&rq->nr_iowait);
-	*load = rq->nr_running;
-}
-
 DEFINE_PER_CPU(struct kernel_stat, kstat);
 DEFINE_PER_CPU(struct kernel_cpustat, kernel_cpustat);
 
-- 
2.20.1.2.gb21ebb671b

