From 44e86bf5fae7b06d7ab0e962bc7741a289e84b7f Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Sat, 29 Sep 2018 09:46:51 +0800
Subject: [PATCH 11/70] pds: Fix and sync-up reset on fork handling.

---
 kernel/sched/pds.c | 14 ++++++--------
 1 file changed, 6 insertions(+), 8 deletions(-)

diff --git a/kernel/sched/pds.c b/kernel/sched/pds.c
index ce0f7682f0ef..64eecc58cd94 100644
--- a/kernel/sched/pds.c
+++ b/kernel/sched/pds.c
@@ -2088,7 +2088,6 @@ int sched_fork(unsigned long __maybe_unused clone_flags, struct task_struct *p)
 {
 	unsigned long flags;
 	int cpu = get_cpu();
-	struct rq *rq = this_rq();
 
 #ifdef CONFIG_PREEMPT_NOTIFIERS
 	INIT_HLIST_HEAD(&p->preempt_notifiers);
@@ -2121,15 +2120,12 @@ int sched_fork(unsigned long __maybe_unused clone_flags, struct task_struct *p)
 	if (unlikely(p->sched_reset_on_fork)) {
 		if (p->policy == SCHED_FIFO || p->policy == SCHED_RR) {
 			p->policy = SCHED_NORMAL;
-			p->normal_prio = normal_prio(p);
-		}
-
-		if (PRIO_TO_NICE(p->static_prio) < 0) {
 			p->static_prio = NICE_TO_PRIO(0);
-			p->normal_prio = p->static_prio;
-		}
+			p->rt_priority = 0;
+		} else if (PRIO_TO_NICE(p->static_prio) < 0)
+			p->static_prio = NICE_TO_PRIO(0);
 
-		p->prio = p->normal_prio;
+		p->prio = p->normal_prio = normal_prio(p);
 
 		/*
 		 * We don't need the reset flag anymore after the fork. It has
@@ -2145,6 +2141,8 @@ int sched_fork(unsigned long __maybe_unused clone_flags, struct task_struct *p)
 	 */
 	if (SCHED_NORMAL == p->policy || SCHED_RR == p->policy ||
 	    SCHED_ISO == p->policy) {
+		struct rq *rq = this_rq();
+
 		raw_spin_lock_irqsave(&rq->lock, flags);
 		rq->curr->time_slice /= 2;
 		p->time_slice = rq->curr->time_slice;
-- 
2.21.0

