From 413a76cd625accba78cd9289f28adf3d2bb2bc4d Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Tue, 19 Feb 2019 10:13:34 +0800
Subject: [PATCH 68/70] pds: [Sync] 4c4e3731564c sched/wake_q: Fix wakeup
 ordering for wake_q

---
 kernel/sched/pds.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/kernel/sched/pds.c b/kernel/sched/pds.c
index 1fb420dd49f3..21d15416604d 100644
--- a/kernel/sched/pds.c
+++ b/kernel/sched/pds.c
@@ -5466,10 +5466,11 @@ void wake_q_add(struct wake_q_head *head, struct task_struct *task)
 	 * its already queued (either by us or someone else) and will get the
 	 * wakeup due to that.
 	 *
-	 * This cmpxchg() executes a full barrier, which pairs with the full
-	 * barrier executed by the wakeup in wake_up_q().
+	 * In order to ensure that a pending wakeup will observe our pending
+	 * state, even in the failed case, an explicit smp_mb() must be used.
 	 */
-	if (cmpxchg(&node->next, NULL, WAKE_Q_TAIL))
+	smp_mb__before_atomic();
+	if (cmpxchg_relaxed(&node->next, NULL, WAKE_Q_TAIL))
 		return;
 
 	get_task_struct(task);
-- 
2.21.0

