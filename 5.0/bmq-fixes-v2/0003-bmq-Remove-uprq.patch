From ba90fc7c68611a87dc6b8db0795b31e8cc971abb Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Wed, 20 Mar 2019 15:33:59 +0800
Subject: [PATCH 3/7] bmq: Remove uprq.

---
 kernel/sched/bmq.c       |  4 ----
 kernel/sched/bmq_sched.h | 14 +++-----------
 2 files changed, 3 insertions(+), 15 deletions(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index a430dbe24c96..e838f2a6fb3d 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -133,8 +133,6 @@ int __weak arch_sd_sibling_asym_packing(void)
 {
        return 0*SD_ASYM_PACKING;
 }
-#else
-struct rq *uprq;
 #endif /* CONFIG_SMP */
 
 static DEFINE_MUTEX(sched_hotcpu_mutex);
@@ -5717,8 +5715,6 @@ void __init sched_init(void)
 #ifdef CONFIG_SMP
 	cpumask_copy(&sched_rq_watermark[1], cpu_present_mask);
 	set_bit(1, sched_rq_watermark_bitmap);
-#else
-	uprq = &per_cpu(runqueues, 0);
 #endif
 
 #ifdef CONFIG_CGROUP_SCHED
diff --git a/kernel/sched/bmq_sched.h b/kernel/sched/bmq_sched.h
index c1f02ba41e88..d00ea49384b7 100644
--- a/kernel/sched/bmq_sched.h
+++ b/kernel/sched/bmq_sched.h
@@ -164,21 +164,14 @@ extern atomic_long_t calc_load_tasks;
 extern void calc_global_load_tick(struct rq *this_rq);
 extern long calc_load_fold_active(struct rq *this_rq, long adjust);
 
-#ifndef CONFIG_SMP
-extern struct rq *uprq;
-#define cpu_rq(cpu)	(uprq)
-#define this_rq()	(uprq)
-#define raw_rq()	(uprq)
-#define task_rq(p)	(uprq)
-#define cpu_curr(cpu)	((uprq)->curr)
-#else /* CONFIG_SMP */
 DECLARE_PER_CPU_SHARED_ALIGNED(struct rq, runqueues);
 #define cpu_rq(cpu)		(&per_cpu(runqueues, (cpu)))
 #define this_rq()		this_cpu_ptr(&runqueues)
-#define raw_rq()		raw_cpu_ptr(&runqueues)
 #define task_rq(p)		cpu_rq(task_cpu(p))
 #define cpu_curr(cpu)		(cpu_rq(cpu)->curr)
+#define raw_rq()		raw_cpu_ptr(&runqueues)
 
+#ifdef CONFIG_SMP
 #if defined(CONFIG_SCHED_DEBUG) && defined(CONFIG_SYSCTL)
 void register_sched_domain_sysctl(void);
 void unregister_sched_domain_sysctl(void);
@@ -190,14 +183,13 @@ static inline void unregister_sched_domain_sysctl(void)
 {
 }
 #endif
-
 #endif /* CONFIG_SMP */
 
 #ifndef arch_scale_freq_capacity
 static __always_inline
 unsigned long arch_scale_freq_capacity(int cpu)
 {
-		return SCHED_CAPACITY_SCALE;
+	return SCHED_CAPACITY_SCALE;
 }
 #endif
 
-- 
2.21.0.196.g041f5ea1cf

