From 22767582d215c451b1fde897ee79ff96c526310e Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Fri, 26 Apr 2019 09:10:28 +0800
Subject: [PATCH 3/4] bmq: Re-implement yield_type 1.

Re-implement origianl yield_type 1. Now the supportted yield type as below
0: No yield.
1: Deboost and requeue task. (default)
2: Set rq skip task.
---
 kernel/sched/bmq.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index 2fe62d770561..e56362710c0f 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -63,6 +63,7 @@ static inline void print_scheduler_version(void)
  * sched_yield_type - Choose what sort of yield sched_yield will perform.
  * 0: No yield.
  * 1: Deboost and requeue task. (default)
+ * 2: Set rq skip task.
  */
 int sched_yield_type __read_mostly = 1;
 
@@ -4616,8 +4617,16 @@ static void do_sched_yield(void)
 	rq = this_rq_lock_irq(&rf);
 
 	schedstat_inc(rq->yld_count);
-	if (rq->nr_running > 1)
-		rq->skip = current;
+
+	if (1 == sched_yield_type) {
+		if (!rt_task(current)) {
+			current->boost_prio = MAX_PRIORITY_ADJ;
+			requeue_task(current, rq);
+		}
+	} else if (2 == sched_yield_type) {
+		if (rq->nr_running > 1)
+			rq->skip = current;
+	}
 
 	/*
 	 * Since we are going to call schedule() anyway, there's
-- 
2.21.0.777.g83232e3864

