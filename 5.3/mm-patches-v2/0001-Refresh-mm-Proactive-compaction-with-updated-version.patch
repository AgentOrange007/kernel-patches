From d8fe2d03a400fb9b50dc84f2436cd911bd585733 Mon Sep 17 00:00:00 2001
From: Steven Barrett <steven@liquorix.net>
Date: Sat, 23 Nov 2019 13:28:17 -0600
Subject: [PATCH] Refresh "mm: Proactive compaction" with updated version

Source: https://patchwork.kernel.org/patch/11247165/
---
 mm/compaction.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/mm/compaction.c b/mm/compaction.c
index 9a5f85e8b7ac..c8b725aaf835 100644
--- a/mm/compaction.c
+++ b/mm/compaction.c
@@ -26,7 +26,7 @@
 #include "internal.h"
 
 #ifdef CONFIG_COMPACTION
-struct compaction_state compaction_states[MAX_NUMNODES];
+static struct compaction_state compaction_states[MAX_NUMNODES];
 #endif
 
 #ifdef CONFIG_COMPACTION
@@ -1858,7 +1858,7 @@ static unsigned int extfrag_hpage_wmark(struct zone *zone, bool low)
 	wmark_low = 100 - compaction_states[node_id].hpage_compaction_effort;
 	wmark = low ? wmark_low : min(wmark_low + 10, 100);
 
-	return extfrag_for_order(zone, HPAGE_PMD_ORDER) > wmark;
+	return extfrag_for_order(zone, HUGETLB_PAGE_ORDER) > wmark;
 }
 
 static bool node_hpage_should_compact(pg_data_t *pgdat)
@@ -1867,7 +1867,7 @@ static bool node_hpage_should_compact(pg_data_t *pgdat)
 
 	for_each_populated_zone(zone) {
 		if (extfrag_hpage_wmark(zone, false) &&
-			compaction_suitable(zone, HPAGE_PMD_ORDER,
+			compaction_suitable(zone, HUGETLB_PAGE_ORDER,
 				0, zone_idx(zone)) == COMPACT_CONTINUE) {
 			return true;
 		}
-- 
2.24.0.155.gd9f6f3b619

