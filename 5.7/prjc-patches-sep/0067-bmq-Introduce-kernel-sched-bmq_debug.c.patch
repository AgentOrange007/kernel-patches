From c42a3342a19dc4db00f236afaa8de729a674701b Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Fri, 7 Feb 2020 10:11:39 +0800
Subject: [PATCH 067/112] bmq: Introduce kernel/sched/bmq_debug.c

---
 kernel/sched/Makefile    |  2 +-
 kernel/sched/bmq.c       | 47 ----------------------------------------
 kernel/sched/bmq_debug.c | 31 ++++++++++++++++++++++++++
 3 files changed, 32 insertions(+), 48 deletions(-)
 create mode 100644 kernel/sched/bmq_debug.c

diff --git a/kernel/sched/Makefile b/kernel/sched/Makefile
index cab4e5c5b38e..3ae94fd24fc2 100644
--- a/kernel/sched/Makefile
+++ b/kernel/sched/Makefile
@@ -17,7 +17,7 @@ CFLAGS_core.o := $(PROFILING) -fno-omit-frame-pointer
 endif
 
 ifdef CONFIG_SCHED_BMQ
-obj-y += bmq.o
+obj-y += bmq.o bmq_debug.o
 else
 obj-y += core.o
 obj-y += fair.o rt.o deadline.o
diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index 496af2c57092..2dde29ba6398 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -68,18 +68,6 @@ early_param("bmq.timeslice", sched_timeslice);
 /* Reschedule if less than this many Î¼s left */
 #define RESCHED_NS		(100 * 1000)
 
-/*
- * This allows printing both to /proc/sched_debug and
- * to the console
- */
-#define SEQ_printf(m, x...)			\
- do {						\
-	if (m)					\
-		seq_printf(m, x);		\
-	else					\
-		pr_cont(x);			\
- } while (0)
-
 static inline void print_scheduler_version(void)
 {
 	printk(KERN_INFO "bmq: BMQ CPU Scheduler 5.5-r1 by Alfred Chen.\n");
@@ -5290,29 +5278,6 @@ static void set_rq_online(struct rq *rq)
 		rq->online = true;
 }
 
-#ifdef CONFIG_SCHED_DEBUG
-
-static __read_mostly int sched_debug_enabled;
-
-static int __init sched_debug_setup(char *str)
-{
-	sched_debug_enabled = 1;
-
-	return 0;
-}
-early_param("sched_debug", sched_debug_setup);
-
-static inline bool sched_debug(void)
-{
-	return sched_debug_enabled;
-}
-#else /* !CONFIG_SCHED_DEBUG */
-static inline bool sched_debug(void)
-{
-	return false;
-}
-#endif /* CONFIG_SCHED_DEBUG */
-
 #ifdef CONFIG_SMP
 void scheduler_ipi(void)
 {
@@ -5959,18 +5924,6 @@ void ia64_set_curr_task(int cpu, struct task_struct *p)
 
 #endif
 
-#ifdef CONFIG_SCHED_DEBUG
-void proc_sched_show_task(struct task_struct *p, struct pid_namespace *ns,
-			  struct seq_file *m)
-{
-	SEQ_printf(m, "%s (%d, #threads: %d)\n", p->comm, task_pid_nr_ns(p, ns),
-						get_nr_threads(p));
-}
-
-void proc_sched_set_task(struct task_struct *p)
-{}
-#endif
-
 #ifdef CONFIG_CGROUP_SCHED
 static void sched_free_group(struct task_group *tg)
 {
diff --git a/kernel/sched/bmq_debug.c b/kernel/sched/bmq_debug.c
new file mode 100644
index 000000000000..375a1a805d86
--- /dev/null
+++ b/kernel/sched/bmq_debug.c
@@ -0,0 +1,31 @@
+/*
+ * kernel/sched/bmq_debug.c
+ *
+ * Print the BMQ debugging details
+ *
+ * Author: Alfred Chen
+ * Date  : 2020
+ */
+#include "bmq_sched.h"
+
+/*
+ * This allows printing both to /proc/sched_debug and
+ * to the console
+ */
+#define SEQ_printf(m, x...)			\
+ do {						\
+	if (m)					\
+		seq_printf(m, x);		\
+	else					\
+		pr_cont(x);			\
+ } while (0)
+
+void proc_sched_show_task(struct task_struct *p, struct pid_namespace *ns,
+			  struct seq_file *m)
+{
+	SEQ_printf(m, "%s (%d, #threads: %d)\n", p->comm, task_pid_nr_ns(p, ns),
+						get_nr_threads(p));
+}
+
+void proc_sched_set_task(struct task_struct *p)
+{}
-- 
2.27.0.112.g101b3204f3

