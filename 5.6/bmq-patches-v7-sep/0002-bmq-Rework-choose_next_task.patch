From 3d94180407b70912bdb7a42b1d2abd0e00b692a1 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Sun, 12 Apr 2020 10:36:34 +0800
Subject: [PATCH 2/4] bmq: Rework choose_next_task().

---
 kernel/sched/bmq.c | 34 ++++++++++++++++++++++++----------
 1 file changed, 24 insertions(+), 10 deletions(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index 331ab35962e3..0db417604dda 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -3322,18 +3322,39 @@ choose_next_task(struct rq *rq, int cpu, struct task_struct *prev)
 
 	if (unlikely(rq->skip)) {
 		next = rq_runnable_task(rq);
+		if (next == rq->idle) {
 #ifdef	CONFIG_SMP
-		if (next == rq->idle && take_other_rq_tasks(rq, cpu))
+			if (!take_other_rq_tasks(rq, cpu)) {
+#endif
+				rq->skip = NULL;
+				schedstat_inc(rq->sched_goidle);
+				return next;
+#ifdef	CONFIG_SMP
+			}
 			next = rq_runnable_task(rq);
 #endif
+		}
 		rq->skip = NULL;
+#ifdef CONFIG_HIGH_RES_TIMERS
+		hrtick_start(rq, next->time_slice);
+#endif
 		return next;
 	}
 
 	next = rq_first_bmq_task(rq);
+	if (next == rq->idle) {
+#ifdef	CONFIG_SMP
+		if (!take_other_rq_tasks(rq, cpu)) {
+#endif
+			schedstat_inc(rq->sched_goidle);
+			return next;
 #ifdef	CONFIG_SMP
-	if (next == rq->idle && take_other_rq_tasks(rq, cpu))
-		return rq_first_bmq_task(rq);
+		}
+		next = rq_first_bmq_task(rq);
+#endif
+	}
+#ifdef CONFIG_HIGH_RES_TIMERS
+	hrtick_start(rq, next->time_slice);
 #endif
 	return next;
 }
@@ -3433,13 +3454,6 @@ static void __sched notrace __schedule(bool preempt)
 
 	next = choose_next_task(rq, cpu, prev);
 
-	if (next == rq->idle)
-		schedstat_inc(rq->sched_goidle);
-#ifdef CONFIG_HIGH_RES_TIMERS
-	else
-		hrtick_start(rq, next->time_slice);
-#endif
-
 	if (likely(prev != next)) {
 		next->last_ran = rq->clock_task;
 		rq->last_ts_switch = rq->clock;
-- 
2.26.2.533.gb34789c0b0

