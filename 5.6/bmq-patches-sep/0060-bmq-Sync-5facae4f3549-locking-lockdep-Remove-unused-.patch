From 3ddcb6d3835104efa5e0ab4b976aca49862fda4c Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Tue, 7 Jan 2020 21:30:21 +0800
Subject: [PATCH 60/81] bmq: [Sync] 5facae4f3549 locking/lockdep: Remove unused
 @nested argument from lock_release()

---
 kernel/sched/bmq.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index 42a2a5b3d172..485c3d232eaf 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -2052,7 +2052,7 @@ prepare_lock_switch(struct rq *rq, struct task_struct *next)
 	 * of the scheduler it's an obvious special-case), so we
 	 * do an early lockdep release here:
 	 */
-	spin_release(&rq->lock.dep_map, 1, _THIS_IP_);
+	spin_release(&rq->lock.dep_map, _THIS_IP_);
 #ifdef CONFIG_DEBUG_SPINLOCK
 	/* this is a valid case when another task releases the spinlock */
 	rq->lock.owner = next;
@@ -2868,7 +2868,7 @@ static inline int take_other_rq_tasks(struct rq *rq, int cpu)
 
 			nr_migrated = migrate_pending_tasks(src_rq, rq, cpu);
 
-			spin_release(&src_rq->lock.dep_map, 1, _RET_IP_);
+			spin_release(&src_rq->lock.dep_map, _RET_IP_);
 			do_raw_spin_unlock(&src_rq->lock);
 
 			if (nr_migrated) {
-- 
2.26.0.51.ga7d14a4428

