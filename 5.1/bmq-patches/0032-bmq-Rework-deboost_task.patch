From 4c7e114855cd140d2fb4f29034ce45067d8981fe Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Thu, 18 Apr 2019 16:01:10 +0800
Subject: [PATCH 32/43] bmq: Rework deboost_task().

---
 include/linux/sched.h |  1 -
 init/init_task.c      |  1 -
 kernel/sched/bmq.c    | 17 +----------------
 3 files changed, 1 insertion(+), 18 deletions(-)

diff --git a/include/linux/sched.h b/include/linux/sched.h
index b21376df579a..b9e4f33eb31e 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -645,7 +645,6 @@ struct task_struct {
 	int				boost_prio;
 	int				bmq_idx;
 	struct list_head		bmq_node;
-	int				ts_deboost;
 	/* sched_clock time spent running */
 	u64				sched_time;
 #else /* !CONFIG_SCHED_BMQ */
diff --git a/init/init_task.c b/init/init_task.c
index f72d121ec0e5..17b4e5774599 100644
--- a/init/init_task.c
+++ b/init/init_task.c
@@ -80,7 +80,6 @@ struct task_struct init_task
 	.restart_block	= {
 		.fn = do_no_restart_syscall,
 	},
-	.ts_deboost	= 0,
 	.boost_prio	= 0,
 	.bmq_idx	= 15,
 	.bmq_node	= LIST_HEAD_INIT(init_task.bmq_node),
diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index e0f7af0969e2..2fe62d770561 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -66,18 +66,6 @@ static inline void print_scheduler_version(void)
  */
 int sched_yield_type __read_mostly = 1;
 
-const static u64 ts_overrun_th[] = {
-	SCHED_TIMESLICE_NS / 32,
-	SCHED_TIMESLICE_NS / 16,
-	SCHED_TIMESLICE_NS / 8,
-	SCHED_TIMESLICE_NS / 4,
-	SCHED_TIMESLICE_NS / 2,
-	SCHED_TIMESLICE_NS * 3 / 4,
-	SCHED_TIMESLICE_NS * 15 / 16,
-	SCHED_TIMESLICE_NS * 63 / 64,
-	SCHED_TIMESLICE_NS * 127 / 128
-};
-
 const static u64 ts_boost_th[] = {
 	SCHED_TIMESLICE_NS >> 10,
 	SCHED_TIMESLICE_NS >> 9,
@@ -2889,12 +2877,10 @@ static inline void check_curr(struct task_struct *p, struct rq *rq)
 	if (p->time_slice < RESCHED_NS) {
 		p->time_slice = SCHED_TIMESLICE_NS;
 		if (SCHED_FIFO != p->policy && task_on_rq_queued(p)) {
-			if (SCHED_RR != p->policy &&
-			    (p->ts_deboost || TASK_ST(p, rq, >, ts_overrun_th)))
+			if (SCHED_RR != p->policy)
 				deboost_task(p);
 			requeue_task(p, rq);
 		}
-		p->ts_deboost = 0;
 	}
 }
 
@@ -3150,7 +3136,6 @@ static void __sched notrace __schedule(bool preempt)
 		if (signal_pending_state(prev->state, prev)) {
 			prev->state = TASK_RUNNING;
 		} else {
-			prev->ts_deboost |= TASK_ST(prev, rq, >, ts_overrun_th);
 			boost_task(prev, rq);
 			deactivate_task(prev, rq);
 
-- 
2.21.0.777.g83232e3864

