From 38cc58aed760aa0dd569cdcfa29dd44ba42b3530 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Fri, 15 Mar 2019 10:17:31 +0800
Subject: [PATCH 13/43] bmq: Consider boost_prio in task_prio().

---
 kernel/sched/bmq.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index b0e233a73542..5d4a0022bf38 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -3613,7 +3613,9 @@ SYSCALL_DEFINE1(nice, int, increment)
  */
 int task_prio(const struct task_struct *p)
 {
-	return (p->prio - MAX_RT_PRIO);
+	if (p->prio < MAX_RT_PRIO)
+		return (p->prio - MAX_RT_PRIO);
+	return (p->prio - MAX_RT_PRIO + p->boost_prio);
 }
 
 /**
@@ -4821,10 +4823,6 @@ static int sched_rr_get_interval(pid_t pid, struct timespec64 *t)
 	if (!p)
 		goto out_unlock;
 
-	printk(KERN_INFO "bmq: %d - p:%d n:%d s:%d b:%d\n",
-	       p->pid, p->prio, p->normal_prio,
-	       p->static_prio, p->boost_prio);
-
 	retval = security_task_getscheduler(p);
 	if (retval)
 		goto out_unlock;
-- 
2.21.0.777.g83232e3864

