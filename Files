.
├── 4.11
│   ├── 0005-BFQ-update-to-v8r12.patch
│   ├── 0006-BFQ-bugfix-for-v8r12.patch
│   └── 4.11-bfq-mq-git-20170704.patch
├── 4.12
│   ├── 0100-Check-presence-on-tree-of-every-entity-after-every-a.patch
│   ├── 0200-BFQ-MQ-bugfix-from-pfkernel-1.patch
│   ├── 0200-BFQ-MQ-bugfix-from-pfkernel-2.patch
│   ├── 0200-BFQ-MQ-bugfix-from-pfkernel-3.patch
│   ├── 0200-BFQ-MQ-bugfix-from-pfkernel-4.patch
│   ├── 4.12-bfq-mq-git-20170810.patch
│   ├── 4.12-bfq-mq-git-20170829.patch
│   ├── 4.12-bfq-mq-git-20170831.patch
│   ├── 4.12-bfq-mq-git-20170904.patch
│   ├── blk-mq-from-pfkernel
│   │   ├── 0040-blk-mq-add-requests-in-the-tail-of-hctx->dispatch.patch
│   │   ├── 0040-blk-mq-align-to-legacy's-implementation-of-blk_execute_rq.patch
│   │   └── README for blk-mq-from-pfkernel.md
│   ├── blk-mq-v1
│   │   ├── 0050-blk-mq-sched-fix-scheduler-bad-performance.patch
│   │   ├── 0051-blk-mq-rename-flush_busy_ctx_data-as-ctx_iter_data.patch
│   │   ├── 0052-blk-mq-introduce-blk_mq_dispatch_rq_from_ctxs().patch
│   │   ├── 0053-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│   │   ├── 0054-blk-mq-sched-don't-dequeue-request-until-all-in->dispatch-are-flushed.patch
│   │   ├── 0055-blk-mq-sched-introduce-blk_mq_sched_queue_depth().patch
│   │   ├── 0056-blk-mq-sched-use-q->queue_depth-as-hint for q->nr_requests.patch
│   │   ├── 0057-blk-mq-introduce-BLK_MQ_F_SHARED_DEPTH.patch
│   │   ├── 0058-blk-mq-sched-cleanup-blk_mq_sched_dispatch_requests().patch
│   │   ├── 0059-blk-mq-sched-introduce-helpers-for-query-change-busy-state.patch
│   │   ├── 0060-blk-mq-introduce-helpers-for-operating->dispatch-list.patch
│   │   ├── 0061-blk-mq-introduce-pointers-to-dispatchlock-list.patch
│   │   ├── 0062-blk-mq-pass-request_queue-to-several-helpers-of-operating-BUSY.patch
│   │   └── 0063-blk-mq-sched-improve-IO-scheduling-on-SCSI-devcie.patch
│   ├── blk-mq-v2
│   │   ├── 0050-blk-mq-sched-fix-scheduler-bad-performance.patch
│   │   ├── 0051-blk-mq-sbitmap-introduce__sbitmap_for_each_set().patch
│   │   ├── 0052-blk-mq-introduce-blk_mq_dispatch_rq_from_ctx().patch
│   │   ├── 0053-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│   │   ├── 0054-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│   │   ├── 0055-blk-mq-sched-don't-dequeue-request-until-all-in-dispatch-are-flushed.patch
│   │   ├── 0056-blk-mq-sched-introduce-blk_mq_sched_queue_depth().patch
│   │   ├── 0057-blk-mq-sched-use-q->queue_depth-as-hint-for-q->nr_requests.patch
│   │   ├── 0058-blk-mq-introduce-BLK_MQ_F_SHARED_DEPTH.patch
│   │   ├── 0059-blk-mq-sched-introduce-helpers-for-query-change-busy-state.patch
│   │   ├── 0060-blk-mq-introduce-helpers-for-operating->dispatch-list.patch
│   │   ├── 0061-blk-mq-introduce-pointers-to-dispatch-lock&list.patch
│   │   ├── 0062-blk-mq-pass-request_queue-to-several-helpers-of-operating-BUSY.patch
│   │   ├── 0063-blk-mq-sched-improve-IO-scheduling-on-SCSI-devcie.patch
│   │   ├── 0064-blk-mq-block-introduce-rqhash-helpers.patch
│   │   ├── 0065-blk-mq-block-move-actual-bio-merge-code-into__elv_merge.patch
│   │   ├── 0066-blk-mq-block-add-check-on-elevator-for-supporting-bio-merge-via-hashtable-from-blk-mq-sw.patch
│   │   ├── 0067-blk-mq-block-introduce-last_merge-and-hash-to-blk_mq_ctx.patch
│   │   ├── 0068-blk-mq-sched-refactor-blk_mq_sched_try_merge().patch
│   │   └── 0069-blk-mq-improve-bio-merge-from-blk-mq-sw-queue.patch
│   ├── blk-mq-v3
│   │   ├── 0050-blk-mq-sched-fix-scheduler-bad-performance.patch
│   │   ├── 0051-blk-mq-sbitmap-introduce__sbitmap_for_each_set().patch
│   │   ├── 0052-blk-mq-introduce-blk_mq_dispatch_rq_from_ctx().patch
│   │   ├── 0053-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│   │   ├── 0054-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│   │   ├── 0055-blk-mq-sched-don't-dequeue-request-until-all-in->dispatch-are-flushed.patch
│   │   ├── 0056-blk-mq-sched-introduce-blk_mq_sched_queue_depth().patch
│   │   ├── 0057-blk-mq-sched-use-q->queue_depth-as-hint-for-q->nr_requests.patch
│   │   ├── 0058-blk-mq-block-introduce-rqhash-helpers.patch
│   │   ├── 0059-blk-mq-block-move-actual-bio-merge-code-into__elv_merge.patch
│   │   ├── 0060-blk-mq-block-add-check-on-elevator-for-supporting-bio-merge-via-hashtable-from-blk-mq-sw.patch
│   │   ├── 0061-blk-mq-block-introduce-last_merge-and-hash-to-blk_mq_ctx.patch
│   │   ├── 0062-blk-mq-sched-refactor-blk_mq_sched_try_merge().patch
│   │   └── 0063-blk-mq-improve-bio-merge-from-blk-mq-sw-queue.patch
│   └── blk-mq-v4
│       ├── 0050-blk-mq-sched-fix-scheduler-bad-performance.patch
│       ├── 0051-blk-mq-sbitmap-introduce-__sbitmap_for_each_set.patch
│       ├── 0052-blk-mq-introduce-blk_mq_dispatch_rq_from_ctx.patch
│       ├── 0053-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│       ├── 0054-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│       ├── 0055-blk-mq-sched-don-t-dequeue-request-until-all-in-disp.patch
│       ├── 0056-blk-mq-sched-introduce-blk_mq_sched_queue_depth.patch
│       ├── 0057-blk-mq-sched-use-q-queue_depth-as-hint-for-q-nr_requ.patch
│       ├── 0058-blk-mq-block-introduce-rqhash-helpers.patch
│       ├── 0059-blk-mq-block-move-actual-bio-merge-code-into-__elv_merge.patch
│       ├── 0060-blk-mq-block-add-check-on-elevator-for-supporting-bio-merge.patch
│       ├── 0061-blk-mq-block-introduce-.last_merge-and-.hash-to-blk_mq_ctx.patch
│       ├── 0062-blk-mq-sched-refactor-blk_mq_sched_try_merge.patch
│       └── 0063-blk-mq-improve-bio-merge-from-blk-mq-sw-queue.patch
├── 4.13
│   ├── 0001-bfq-sq-mq-fix-patching-error-with-20171109.patch
│   ├── 0100-Check-presence-on-tree-of-every-entity-after-every-a.patch
│   ├── 0200-BFQ-MQ-bugfix-from-pfkernel-2.patch
│   ├── 0200-BFQ-MQ-bugfix-from-pfkernel-3.patch
│   ├── 0200-BFQ-MQ-bugfix-from-pfkernel-4.patch
│   ├── 0300-Disable-writeback-throttling.patch
│   ├── 4.13-bfq-sq-mq-git-20170904.patch
│   ├── 4.13-bfq-sq-mq-git-20170912.patch
│   ├── 4.13-bfq-sq-mq-git-20170913.patch
│   ├── 4.13-bfq-sq-mq-git-20170919.patch
│   ├── 4.13-bfq-sq-mq-git-20170921.patch
│   ├── 4.13-bfq-sq-mq-git-20171007.patch
│   ├── 4.13-bfq-sq-mq-git-20171009.patch
│   ├── 4.13-bfq-sq-mq-git-20171030.patch
│   ├── 4.13-bfq-sq-mq-git-20171109.patch
│   ├── 4.13-bfq-sq-mq-git-20171111.patch
│   ├── 4.13-bfq-sq-mq-git-20171114.patch
│   ├── blk-mq-another
│   │   ├── 0090-blk-mq-put-the-driver-tag-of-nxt-rq-before-first-one-is-requeued.patch
│   │   ├── 0091-blk-flush-don't-run-queue-for-requests-of-bypassing-flush.patch
│   │   ├── 0092-block-pass-'run_queue'-to-blk_mq_request_bypass_insert.patch
│   │   ├── 0093-blk-flush-use-blk_mq_request_bypass_insert().patch
│   │   ├── 0094-blk-mq-sched-decide-how-to-handle-flush-rq-via-RQF_FLUSH_SEQ.patch
│   │   ├── 0095-blk-mq-move-blk_mq_put_driver_tag*()-into-blk-mq.h.patch
│   │   └── 0096-blk-mq-don't-allocate-driver-tag-beforehand-for-flush-rq.patch
│   ├── blk-mq-from-pfkernel
│   │   ├── 0040-blk-mq-add-requests-in-the-tail-of-hctx->dispatch.patch
│   │   ├── 0040-blk-mq-align-to-legacy's-implementation-of-blk_execute_rq.patch
│   │   └── README for blk-mq-from-pfkernel.md
│   ├── blk-mq-miscellaneous
│   │   ├── 0500-blk-mq-Revert-multiple-recent-patches.patch
│   │   ├── 0500-blk-mq-don't-handle-failure-in.get_budget.patch
│   │   ├── 0500-blk-mq-put-driver-tag-if-dispatch-budget-can't-be-got.patch
│   │   ├── 0500-blk-mq-quiesce-queue-during-switching-io-sched-and-updating-nr_requests.patch
│   │   └── 0500-blk-mq-respect-queue-dead-via-blk_mq_quiesce_queue.patch
│   ├── blk-mq-miscellaneous-v2
│   │   └── 0500-blk-mq-put-driver-tag-if-dispatch-budget-can't-be-got.patch
│   ├── blk-mq-v10
│   │   ├── 0050-blk-mq-sched-dispatch-from-scheduler-only-after-progress-is-made-on->dispatch.patch
│   │   ├── 0051-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│   │   ├── 0052-blk-mq-sbitmap-introduce__sbitmap_for_each_set().patch
│   │   ├── 0053-blk-mq-block-kyber-check-if-there-is-request-in-ctx-in-kyber_has_work().patch
│   │   ├── 0054-blk-mq-introduce-get_budget-and-put_budget-in-blk_mq_ops.patch
│   │   ├── 0055-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│   │   ├── 0056-blk-mq-SCSI-allow-to-pass-null-rq-to-scsi_prep_state_check().patch
│   │   └── 0057-blk-mq-SCSI-implement-get-budget-and-put_budget-for-blk-mq.patch
│   ├── blk-mq-v4
│   │   ├── 0050-blk-mq-sched-fix-scheduler-bad-performance.patch
│   │   ├── 0051-blk-mq-sbitmap-introduce-__sbitmap_for_each_set.patch
│   │   ├── 0052-blk-mq-introduce-blk_mq_dispatch_rq_from_ctx.patch
│   │   ├── 0053-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│   │   ├── 0054-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│   │   ├── 0055-blk-mq-sched-don-t-dequeue-request-until-all-in-disp.patch
│   │   ├── 0056-blk-mq-sched-introduce-blk_mq_sched_queue_depth.patch
│   │   ├── 0057-blk-mq-sched-use-q-queue_depth-as-hint-for-q-nr_requ.patch
│   │   ├── 0058-blk-mq-block-introduce-rqhash-helpers.patch
│   │   ├── 0059-blk-mq-block-move-actual-bio-merge-code-into-__elv_merge.patch
│   │   ├── 0060-blk-mq-block-add-check-on-elevator-for-supporting-bio-merge.patch
│   │   ├── 0061-blk-mq-block-introduce-.last_merge-and-.hash-to-blk_mq_ctx.patch
│   │   ├── 0062-blk-mq-sched-refactor-blk_mq_sched_try_merge.patch
│   │   └── 0063-blk-mq-improve-bio-merge-from-blk-mq-sw-queue.patch
│   ├── blk-mq-v5
│   │   ├── 0050-blk-mq-issue-rq-directly-in-blk_mq_request_bypass_insert().patch
│   │   ├── 0051-blk-mq-sched-fix-scheduler-bad-performance.patch
│   │   ├── 0052-blk-mq-sbitmap-introduce__sbitmap_for_each_set().patch
│   │   ├── 0053-blk-mq-introduc-blk_mq_dequeue_from_ctx().patch
│   │   ├── 0054-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│   │   ├── 0055-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│   │   ├── 0056-blk-mq-sched-don't-dequeue-request-until-all-in->dispatch-are-flushed.patch
│   │   ├── 0057-blk-mq-sched-introduce-blk_mq_sched_queue_depth().patch
│   │   ├── 0058-blk-mq-sched-use-q->queue_depth-as-hint-for-q->nr_requests.patch
│   │   ├── 0059-blk-mq-block-introduce-rqhash-helpers.patch
│   │   ├── 0060-blk-mq-block-move-actual-bio-merge-code-into__elv_merge.patch
│   │   ├── 0061-blk-mq-block-add-check-on-elevator-for-supporting-bio-merge-via-hashtable-from-blk-mq-sw-qu.patch
│   │   ├── 0062-blk-mq-block-introduce-last_merge-and-hash-to-blk_mq_ctx.patch
│   │   ├── 0063-blk-mq-sched-refactor-blk_mq_sched_try_merge().patch
│   │   └── 0064-blk-mq-improve-bio-merge-from-blk-mq-sw-queue.patch
│   ├── blk-mq-v6
│   │   ├── 0050-blk-mq-sched-fix-scheduler-bad-performance.patch
│   │   ├── 0051-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│   │   ├── 0052-blk-mq-sbitmap-introduce__sbitmap_for_each_set().patch
│   │   ├── 0053-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│   │   └── 0054-blk-mq-sched-don't-dequeue-request-until-all-in->dispatch-are-flushed.patch
│   ├── blk-mq-v7
│   │   ├── 0050-blk-mq-sched-fix-scheduler-bad-performance.patch
│   │   ├── 0051-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│   │   ├── 0052-blk-mq-sbitmap-introduce__sbitmap_for_each_set().patch
│   │   ├── 0053-blk-mq_introduce_get_budget_and_put_budget_in_blk_mq_ops.patch
│   │   ├── 0054-blk-mq-sched_improve_dispatching_from_sw_queue.patch
│   │   └── 0055-blk-mq-SCSI-implement-get_budget-and-put_budget-for-blk-mq.patch
│   ├── blk-mq-v8
│   │   ├── 0050-blk-mq-sched-fix-scheduler-bad-performance.patch
│   │   ├── 0051-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│   │   ├── 0052-blk-mq-sbitmap-introduce__sbitmap_for_each_set().patch
│   │   ├── 0053-blk-mq-introduce-get_budget-and-put_budget-in-blk_mq_ops.patch
│   │   ├── 0054-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│   │   ├── 0055-blk-mq-SCSI-allow-to-pass-null-rq-to-scsi_prep_state_check().patch
│   │   └── 0056-blk-mq-SCSI-implement-get_budget-and-put_budget-for-blk-mq.patch
│   ├── blk-mq-v9
│   │   ├── 0050-blk-mq-sched-dispatch-from-scheduler-only-after-progress-is-made-on->dispatch.patch
│   │   ├── 0051-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│   │   ├── 0052-blk-mq-sbitmap-introduce__sbitmap_for_each_set().patch
│   │   ├── 0053-blk-mq-introduce-get_budget-and-put_budget-in-blk_mq_ops.patch
│   │   ├── 0054-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│   │   ├── 0055-blk-mq-SCSI-allow-to-pass-null-rq-to-scsi_prep_state_check().patch
│   │   └── 0056-blk-mq-SCSI-implement-get_budget-and-put_budget-for-blk-mq.patch
│   ├── block-blk
│   │   ├── 0080-block-blk-don't-handle-TAG_SHARED-in-restart.patch
│   │   └── 0081-block-blk-don't-restart-queue-when-get_budget-returns-BLK_STS_RESOURCE.patch
│   └── block-scsi
│       ├── 0070-block-scsi-run-idle-hctx-after-delay-in-scsi_mq_get_budget().patch
│       └── 0071-block-scsi-don't-handle-TAG_SHARED-in-restart.patch
├── 4.14
│   ├── 0100-Check-presence-on-tree-of-every-entity-after-every-a.patch
│   ├── 0300-Disable-writeback-throttling.patch
│   ├── 4.14-bfq-sq-mq-git-20171030.patch
│   ├── 4.14-bfq-sq-mq-git-20171109.patch
│   ├── 4.14-bfq-sq-mq-git-20171111.patch
│   ├── 4.14-bfq-sq-mq-git-20171114.patch
│   ├── 4.14-bfq-sq-mq-git-20171211.patch
│   ├── 4.14-bfq-sq-mq-git-20171219.patch
│   ├── bfq-paolo
│   │   ├── 0001-paolo-bfq-update-max-IOPS-sustainable-with-BFQ.patch
│   │   ├── 0002-paolo-bfq-add-missing-invocations-of-bfqg_stats_update_io_add-remove.patch
│   │   ├── 0003-paolo-bfq-update-blkio-stats-outside-the-scheduler-lock.patch
│   │   └── 0004-paolo-bfq-move-debug-blkio-stats-behind-CONFIG_DEBUG_BLK_CGROUP.patch
│   ├── bfq-paolo-v2
│   │   └── 0001-paolo-block-bfq-remove-batches-of-confusing-ifdefs.patch
│   ├── blk-mq-another
│   │   ├── 0090-blk-mq-put-the-driver-tag-of-nxt-rq-before-first-one-is-requeued.patch
│   │   ├── 0091-blk-flush-don't-run-queue-for-requests-of-bypassing-flush.patch
│   │   ├── 0092-block-pass-'run_queue'-to-blk_mq_request_bypass_insert.patch
│   │   ├── 0093-blk-flush-use-blk_mq_request_bypass_insert().patch
│   │   ├── 0094-blk-mq-sched-decide-how-to-handle-flush-rq-via-RQF_FLUSH_SEQ.patch
│   │   ├── 0095-blk-mq-move-blk_mq_put_driver_tag*()-into-blk-mq.h.patch
│   │   └── 0096-blk-mq-don't-allocate-driver-tag-beforehand-for-flush-rq.patch
│   ├── blk-mq-miscellaneous
│   │   ├── 0500-blk-mq-Revert-multiple-recent-patches.patch
│   │   ├── 0500-blk-mq-don't-handle-failure-in.get_budget.patch
│   │   ├── 0500-blk-mq-put-driver-tag-if-dispatch-budget-can't-be-got.patch
│   │   ├── 0500-blk-mq-quiesce-queue-during-switching-io-sched-and-updating-nr_requests.patch
│   │   └── 0500-blk-mq-respect-queue-dead-via-blk_mq_quiesce_queue.patch
│   ├── blk-mq-miscellaneous-v2
│   │   └── 0500-blk-mq-put-driver-tag-if-dispatch-budget-can't-be-got.patch
│   ├── blk-mq-miscellaneous-v3
│   │   ├── 0600-blk-mq-issue-request-directly-for-blk_insert_cloned_request.patch
│   │   ├── 0600-blk-mq-move-actual-issue-into-one-helper.patch
│   │   ├── 0600-blk-mq-return-dispatch-result-to-caller-in-blk_mq_try_issue_directly.patch
│   │   ├── 0600-dm-mpath-don't-call-blk_mq_delay_run_hw_queue()-in-case-of-BLK_STS_RESOURCE.patch
│   │   └── 0600-dm-mpath-return-DM_MAPIO_REQUEUE-in-case-of-rq-allocation-failure.patch
│   ├── blk-mq-miscellaneous-v4
│   │   └── 0770-block-drai-queue-before-waiting-for-q_usage_counter-becoming-zero.patch
│   ├── blk-mq-miscellaneous-v5
│   │   ├── 0780-blk-mq-avoid-to-map-CPU-into-stale-hw-queue.patch
│   │   ├── 0780-blk-mq-fix-race-between-updating-nr_hw_queues-and-switching-io-sched.patch
│   │   ├── 0780-blk-mq-quiesce-queue-before-freeing-queue.patch
│   │   ├── 0780-blk-mq-quiesce-queue-during-switching-io-sched-and-updating-nr_requests.patch
│   │   ├── 0780-blk-mq-support-concurrent-blk_mq_quiesce_queue().patch
│   │   └── 0780-nvme-remove.init_request-callback.patch
│   ├── blk-mq-miscellaneous-v6
│   │   ├── 0790-blk-mq-avoid-to-map-CPU-into-stale-hw-queue.patch
│   │   ├── 0790-blk-mq-fix-race-between-updating-nr_hw_queues-and-switching-io-sched.patch
│   │   ├── 0790-blk-mq-quiesce-queue-before-freeing-queue.patch
│   │   ├── 0790-blk-mq-quiesce-queue-during-switching-io-sched-and-updating-nr_requests.patch
│   │   ├── 0790-blk-mq-support-concurrent-blk_mq_quiesce_queue().patch
│   │   └── 0790-nvme-pci-remove-init_request-callback.patch
│   ├── blk-mq-v10
│   │   ├── 0050-blk-mq-sched-dispatch-from-scheduler-only-after-progress-is-made-on->dispatch.patch
│   │   ├── 0051-blk-mq-sched-move-actual-dispatching-into-one-helper.patch
│   │   ├── 0052-blk-mq-sbitmap-introduce__sbitmap_for_each_set().patch
│   │   ├── 0053-blk-mq-block-kyber-check-if-there-is-request-in-ctx-in-kyber_has_work().patch
│   │   ├── 0054-blk-mq-introduce-get_budget-and-put_budget-in-blk_mq_ops.patch
│   │   ├── 0055-blk-mq-sched-improve-dispatching-from-sw-queue.patch
│   │   ├── 0056-blk-mq-SCSI-allow-to-pass-null-rq-to-scsi_prep_state_check().patch
│   │   └── 0057-blk-mq-SCSI-implement-get-budget-and-put_budget-for-blk-mq.patch
│   ├── block-blk
│   │   ├── 0080-block-blk-don't-handle-TAG_SHARED-in-restart.patch
│   │   └── 0081-block-blk-don't-restart-queue-when-get_budget-returns-BLK_STS_RESOURCE.patch
│   ├── block-blk-v2
│   │   ├── 0080-block-blk-run-queue-before-waiting-for-q_usage_counter-becoming-zero.patch
│   │   └── 0081-block-blk-drain-blkcg-part-of-request_queue in blk_cleanup_queue().patch
│   └── block-scsi
│       ├── 0070-block-scsi-run-idle-hctx-after-delay-in-scsi_mq_get_budget().patch
│       └── 0071-block-scsi-don't-handle-TAG_SHARED-in-restart.patch
├── 4.9
│   └── 0005-BFQ-update-to-v8r12.patch
├── Files
└── README.md

36 directories, 237 files
