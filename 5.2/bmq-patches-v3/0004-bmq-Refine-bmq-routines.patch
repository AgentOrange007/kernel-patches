From 0591d7cb81098b236b7dcb83f4f30c5b1f7eb3d6 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Thu, 18 Jul 2019 16:23:57 +0800
Subject: [PATCH 04/10] bmq: Refine bmq routines.

---
 kernel/sched/bmq.c | 13 ++-----------
 1 file changed, 2 insertions(+), 11 deletions(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index fd170bb7f1af..f50a9b1d4cf6 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -177,7 +177,6 @@ static inline void update_sched_rq_watermark(struct rq *rq)
 	unsigned long last_wm = rq->watermark;
 	int cpu;
 
-	BUG_ON(bmq_BITS == watermark);
 	if ((watermark = SCHED_PRIO2WATERMARK(watermark)) == last_wm)
 		return;
 
@@ -248,14 +247,9 @@ static inline void bmq_add_task(struct task_struct *p, struct bmq *q, int idx)
 		return;
 	}
 
-	list_for_each(n, &q->heads[idx]) {
-		struct task_struct *t;
-
-		t = list_entry(n, struct task_struct, bmq_node);
-		if (t->prio > p->prio)
+	list_for_each(n, &q->heads[idx])
+		if (list_entry(n, struct task_struct, bmq_node)->prio > p->prio)
 			break;
-	}
-
 	__list_add(&p->bmq_node, n->prev, n);
 }
 
@@ -267,7 +261,6 @@ static inline struct task_struct *rq_first_bmq_task(struct rq *rq)
 	unsigned long idx = __bmq_find_first_bit(rq->queue.bitmap, bmq_BITS);
 	const struct list_head *head = &rq->queue.heads[idx];
 
-	BUG_ON(list_empty(head));
 	return list_first_entry(head, struct task_struct, bmq_node);
 }
 
@@ -277,12 +270,10 @@ rq_next_bmq_task(struct task_struct *p, struct rq *rq)
 	unsigned long idx = p->bmq_idx;
 	struct list_head *head = &rq->queue.heads[idx];
 
-	BUG_ON(list_empty(head));
 	if (list_is_last(&p->bmq_node, head)) {
 		idx = __bmq_find_next_bit(rq->queue.bitmap, bmq_BITS, idx + 1);
 		head = &rq->queue.heads[idx];
 
-		BUG_ON(list_empty(head));
 		return list_first_entry(head, struct task_struct, bmq_node);
 	}
 
-- 
2.23.0.rc2.8.gff66981f45

