From c4a49e3485d7646435900ab47b3d55e00a687139 Mon Sep 17 00:00:00 2001
From: Paolo Valente <paolo.valente@linaro.org>
Date: Tue, 10 Sep 2019 09:34:24 +0200
Subject: [PATCH] block, bfq, DEBUG: remove stale BFQ_BUG_ONs in bfq_bfqq_move

Since commit
"block, bfq: re-schedule empty queues if they deserve I/O plugging"
a bfq_queue can be busy even if it is empty. Yet this compund condition
triggers some stale BFQ_BUG_ONs. Remove these stale BFQ_BUG_ONs.

Signed-off-by: Paolo Valente <paolo.valente@linaro.org>
---
 block/bfq-cgroup.c | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/block/bfq-cgroup.c b/block/bfq-cgroup.c
index 2c7dde05b701..bd1b2b9de0c0 100644
--- a/block/bfq-cgroup.c
+++ b/block/bfq-cgroup.c
@@ -567,9 +567,6 @@ void bfq_bfqq_move(struct bfq_data *bfqd, struct bfq_queue *bfqq,
 
 	BFQ_BUG_ON(!bfq_bfqq_busy(bfqq) && !RB_EMPTY_ROOT(&bfqq->sort_list));
 	BFQ_BUG_ON(!RB_EMPTY_ROOT(&bfqq->sort_list) && !entity->on_st);
-	BFQ_BUG_ON(bfq_bfqq_busy(bfqq) && RB_EMPTY_ROOT(&bfqq->sort_list)
-	       && entity->on_st &&
-	       bfqq != bfqd->in_service_queue);
 	BFQ_BUG_ON(!bfq_bfqq_busy(bfqq) && bfqq == bfqd->in_service_queue);
 
 	/* If bfqq is empty, then bfq_bfqq_expire also invokes
@@ -586,8 +583,6 @@ void bfq_bfqq_move(struct bfq_data *bfqd, struct bfq_queue *bfqq,
 	    && &bfq_entity_service_tree(entity)->idle !=
 	       entity->tree);
 
-	BFQ_BUG_ON(RB_EMPTY_ROOT(&bfqq->sort_list) && bfq_bfqq_busy(bfqq));
-
 	if (bfq_bfqq_busy(bfqq))
 		bfq_deactivate_bfqq(bfqd, bfqq, false, false);
 	else if (entity->on_st) {
@@ -606,7 +601,6 @@ void bfq_bfqq_move(struct bfq_data *bfqd, struct bfq_queue *bfqq,
 	/* pin down bfqg and its associated blkg  */
 	bfqg_and_blkg_get(bfqg);
 
-	BFQ_BUG_ON(RB_EMPTY_ROOT(&bfqq->sort_list) && bfq_bfqq_busy(bfqq));
 	if (bfq_bfqq_busy(bfqq)) {
 		if (unlikely(!bfqd->nonrot_with_queueing))
 			bfq_pos_tree_add_move(bfqd, bfqq);
-- 
2.23.0.37.g745f681289

