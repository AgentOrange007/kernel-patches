From bba84615c66f1f35d7bc5d4ecae5c0eb5846fa09 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Thu, 11 Apr 2019 16:41:43 +0800
Subject: [PATCH 31/64] bmq: New tasks has MAX_PRIORITY_ADJ boost_prio.

Let new created tasks take less cpu time, and make fairness to existed
tasks.
---
 kernel/sched/bmq.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/sched/bmq.c b/kernel/sched/bmq.c
index 751113b4d734..e0f7af0969e2 100644
--- a/kernel/sched/bmq.c
+++ b/kernel/sched/bmq.c
@@ -1878,7 +1878,6 @@ int sched_fork(unsigned long __maybe_unused clone_flags, struct task_struct *p)
 		} else if (PRIO_TO_NICE(p->static_prio) < 0)
 			p->static_prio = NICE_TO_PRIO(0);
 
-		p->boost_prio = 0;
 		p->prio = p->normal_prio = normal_prio(p);
 
 		/*
@@ -1888,6 +1887,7 @@ int sched_fork(unsigned long __maybe_unused clone_flags, struct task_struct *p)
 		p->sched_reset_on_fork = 0;
 	}
 
+	p->boost_prio = MAX_PRIORITY_ADJ;
 	/*
 	 * Share the timeslice between parent and child, thus the
 	 * total amount of pending timeslices in the system doesn't change,
-- 
2.22.0.214.g8dca754b1e

